[buildout]
versions = defined-versions
allow-picked-versions = true
show-picked-versions = true
# we name files ``*.buildout.cfg`` to be able to make PyCharm aware of them
extends =
# please use alphabetic order in parts
parts =
    os
    templates

    nodejs
    npm_install

develop =
  ./recipes
extensions = buildout.dumppickedversions2
dump-picked-versions-file = missing_versions.cfg
find-links =

; ===========================
; CONFIG
; ===========================

[config]

[system_env]
recipe = gocept.recipe.env

[os]
# this automatically sets ``/usr/local/`` vs ``/opt/local``
# and ``linux`` vs ``macosx``
# @see ``recipes/osdetect.py``
recipe=osdetect_recipe:detect
kernel =
lib_path =
make_opt =
root-prefix = ${buildout:directory}
cflags =

[environment]
LIB_DIR=
DYLD_LIBRARY_PATH=
LD_LIBRARY_PATH=${os:lib_path}/lib:$LD_LIBRARY_PATH
DYLD_FALLBACK_LIBRARY_PATH=${os:lib_path}/lib:/usr/lib
#CXX=/opt/local/bin/g++-apple-4.2
#CC=/opt/local/bin/gcc-apple-4.2
#CPP=/opt/local/bin/cpp-apple-4.2
#LD=/opt/local/libexec/apple-gcc42/gcc/i686-apple-darwin11/4.2.1/ld
LIBRARY_PATH=${os:lib_path}/lib
INCLUDE_PATH=${os:lib_path}/include
C_INCLUDE_PATH=${os:lib_path}/include
CXX_INCLUDE_PATH=${os:lib_path}/include
CPATH=${os:lib_path}/include
CFLAGS=${os:cflags} -I${os:lib_path}/include
CPPFLAGS=
CXXFLAGS=
LANG=en_US.UTF-8
LANG_ALL=en_US.UTF-8


; ===========================
; FRONTEND
; ===========================

[nodejs]
recipe = hexagonit.recipe.cmmi
url = http://nodejs.org/dist/v${defined-versions:nodejs}/node-v${defined-versions:nodejs}.tar.gz
strip-top-level-dir = true
configure-options=
    --no-ssl2
environment-section = environment

[npm_install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
dependency = ${templates:recipe}
cmds =
  PATH=${nodejs:location}/bin:$PATH

  # avoid running this again and again. remember to update the hash after adding stuff here
  NPM_HASH_WANTED="e2acd7bdb8c95dc00b0aeed51659b47c8b6f1f00"

  NPM_HASH_CURRENT="`cd ${buildout:directory} && ${buildout:directory}/bin/npm list|openssl sha1 -hmac "foo" | sed -e 's/^.* //'`"

  echo
  echo "currrent npm hash: $NPM_HASH_CURRENT"
  echo "must be:           $NPM_HASH_WANTED"
  echo

  if [ "$NPM_HASH_CURRENT" != "$NPM_HASH_WANTED" ]; then
      # this section only installs the base npms
      # all project npms will be installed by bower in the source directory

      cd ${buildout:directory} && ${buildout:directory}/bin/npm install \
        && bin/bower install

      echo
      echo "updated npm packages, you might want to update the final hash to: "
      echo "`cd ${buildout:directory} && ${buildout:directory}/bin/npm list|openssl sha1 -hmac "foo" | sed -e 's/^.* //'`"
  fi


; ===========================
; BOILERPLATE
; ===========================

[templates]
recipe = z3c.recipe.filetemplate
source-directory = templates

[defined-versions]
# buildout base, see: http://reinout.vanrees.org/weblog/2013/02/12/prevent-buildout-problems.html
zc.buildout = 2.2.1
zc.recipe.egg = 2.0.0

nodejs=0.10.17

buildout.dumppickedversions2 = 1.1
collective.recipe.cmd = 0.8
hexagonit.recipe.cmmi = 2.0
z3c.recipe.filetemplate = 2.2.0

# Required by:
# hexagonit.recipe.cmmi==2.0
hexagonit.recipe.download = 1.7
zt.recipe.osdetect = 0.0.1-dev
